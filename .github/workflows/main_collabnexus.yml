# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy Node.js app to Azure Web App - CollabNexus

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Changed to ubuntu for consistency with deploy job
    permissions:
      contents: read # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install and build
        run: |
          npm install
          npm run build --if-present

      - name: Verify server entry point exists
        run: |
          if [ ! -f "src/server.js" ]; then
            echo "Error: src/server.js not found. Please check your application structure."
            exit 1
          fi

      - name: Run tests with coverage
        run: |
          npm test -- --coverage --coverageReporters=text --coverageReporters=text-summary --coverageReporters=json-summary

      - name: Display coverage summary
        run: |
          echo "========= TEST COVERAGE SUMMARY ========="
          if [ -f "./coverage/coverage-summary.json" ]; then
            cat ./coverage/coverage-summary.json | jq '.total.statements.pct, .total.branches.pct, .total.functions.pct, .total.lines.pct'
            echo "Statements: $(cat ./coverage/coverage-summary.json | jq '.total.statements.pct')%"
            echo "Branches: $(cat ./coverage/coverage-summary.json | jq '.total.branches.pct')%"
            echo "Functions: $(cat ./coverage/coverage-summary.json | jq '.total.functions.pct')%"
            echo "Lines: $(cat ./coverage/coverage-summary.json | jq '.total.lines.pct')%"
          else
            echo "Coverage summary not found. Check test output above for coverage information."
            echo "See the coverage directory artifact for more details."
          fi
          echo "========================================"

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Create web.config
        run: |
          cat > web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="src/server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="nodejs">
                    <match url="/*" />
                    <action type="Rewrite" url="src/server.js" />
                  </rule>
                </rules>
              </rewrite>
              <iisnode watchedFiles="*.js;node_modules\*;routes\*.js;views\*.js" />
            </system.webServer>
          </configuration>
          EOL

      - name: Prepare deployment package
        run: |
          # Create a deployment directory
          mkdir -p deployment
          
          # Copy only necessary files
          cp -r src/ deployment/
          cp -r public/ deployment/ || true
          cp -r dist/ deployment/ || true
          cp -r build/ deployment/ || true
          cp package.json package-lock.json web.config deployment/
          
          # Copy any other necessary configuration files
          cp tsconfig.json deployment/ || true

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_92C40EADF2D347508B6F2294C072867C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_415BF3DAEC4D4B579E36C58C1CE9703D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_EA42EEAE86F845D7AAF61F6744B98049 }}

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'CollabNexus'
          slot-name: 'Production'
          app-settings-json: |
            [
              {
                "name": "SUPABASE_URL",
                "value": "${{ secrets.SUPABASE_URL }}",
                "slotSetting": false
              },
              {
                "name": "SUPABASE_ANON_KEY",
                "value": "${{ secrets.SUPABASE_ANON_KEY }}",
                "slotSetting": false
              },
              {
                "name": "SUPABASE_SERVICE_KEY",
                "value": "${{ secrets.SUPABASE_SERVICE_KEY }}",
                "slotSetting": false
              },
              {
                "name": "SESSION_SECRET",
                "value": "${{ secrets.SESSION_SECRET }}",
                "slotSetting": false
              },
              {
                "name": "GOOGLE_CLIENT_ID",
                "value": "${{ secrets.GOOGLE_CLIENT_ID }}",
                "slotSetting": false
              },
              {
                "name": "GOOGLE_CLIENT_SECRET",
                "value": "${{ secrets.GOOGLE_CLIENT_SECRET }}",
                "slotSetting": false
              },
              {
                "name": "PRODUCTION_REDIRECT_URL",
                "value": "${{ secrets.PRODUCTION_REDIRECT_URL }}",
                "slotSetting": false
              },
              {
                "name": "NODE_ENV",
                "value": "production",
                "slotSetting": false
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~20",
                "slotSetting": false
              },
              {
                "name": "PORT",
                "value": "3000",
                "slotSetting": false
              },
              {
                "name": "WEBSITE_HOSTNAME",
                "value": "collabnexus-bvgne7b6bqg0cadp.canadacentral-01.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'CollabNexus'
          slot-name: 'Production'
          package: .
